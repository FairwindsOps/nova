version: 2.1

orbs:
  rok8s: fairwinds/rok8s-scripts@11

references:
  enable_experimental_features: &enable_experimental_docker_features
    run:
      name: enable experimental features
      command: |
        set -ex
        apk --update add openssh
        ssh remote-docker \<<EOF
          sudo bash -c 'echo "{\"experimental\": true}" > /etc/docker/daemon.json'
          sudo systemctl restart docker
        EOF
  install_vault: &install_vault
    run:
      name: install hashicorp vault
      command: |
        apk --update add curl yq
        cd /tmp
        curl -LO https://releases.hashicorp.com/vault/1.9.2/vault_1.9.2_linux_amd64.zip
        unzip vault_1.9.2_linux_amd64.zip
        mv vault /usr/bin/vault

jobs:
  test:
    working_directory: /go/src/github.com/fairwindsops/nova
    docker:
      - image: circleci/golang:1.17
    steps:
      - checkout
      - run:
          name: lint
          command: |
            go get -u golang.org/x/lint/golint
            golint -set_exit_status ./... | tee golint-report.out
            test -z $(go fmt ./...)
      - run:
          name: test
          command: |
            go test -v --bench --benchmem -coverprofile=coverage.txt -covermode=atomic ./pkg/...
            go vet 2> govet-report.out
            go tool cover -html=coverage.txt -o cover-report.html
  snapshot:
    working_directory: /go/src/github.com/fairwindsops/nova
    resource_class: large
    docker:
      - image: goreleaser/goreleaser:v1.4.1
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - *enable_experimental_docker_features
      - run: goreleaser --snapshot
      - store_artifacts:
          path: dist
          destination: snapshot
  release:
    working_directory: /go/src/github.com/fairwindsops/nova
    resource_class: large
    shell: /bin/bash
    docker:
      - image: goreleaser/goreleaser:v1.4.1
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - *enable_experimental_docker_features
      - *install_vault
      - rok8s/get_vault_env:
          vault_path: repo/global/env
      - rok8s/docker_login:
          registry: "quay.io"
          username: $FAIRWINDS_QUAY_USER
          password-variable: FAIRWINDS_QUAY_TOKEN
      - run: echo 'export GORELEASER_CURRENT_TAG="${CIRCLE_TAG}"' >> $BASH_ENV
      - run: goreleaser
  publish_docs:
    docker:
      - image: cimg/node:15.5.1
    steps:
      - checkout
      - run:
          name: Build Docs Site
          command: |
            set -e
            cd ./docs
            npm install
            npm run check-links
            npm run build
      - run:
          name: Install Tools
          command: |
            cd /tmp
            echo "Installing AWS CLI"
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

            echo "Installing Hashicorp Vault"
            curl -LO https://releases.hashicorp.com/vault/1.9.2/vault_1.9.2_linux_amd64.zip
            unzip vault_1.9.2_linux_amd64.zip
            sudo mv vault /usr/bin/vault
            sudo chmod +x /usr/bin/vault
            vault --version

            echo "Installing yq"
            curl -LO https://github.com/mikefarah/yq/releases/download/v4.16.2/yq_linux_amd64.tar.gz
            tar -zxvf yq_linux_amd64.tar.gz
            sudo mv yq_linux_amd64 /usr/bin/yq
            sudo chmod +x /usr/bin/yq
            yq --version
      - rok8s/get_vault_env:
          vault_path: repo/nova/env
      - run:
          name: Publish Docs Site to S3
          command: |
            cd ./dist
            aws s3 sync ./ s3://nova.docs.fairwinds.com --delete

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - snapshot:
          requires:
            - test
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
  release:
    jobs:
      - publish_docs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - release:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
